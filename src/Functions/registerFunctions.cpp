/// This file is autogenerated by './registerFunctions.sh > registerFunctions.cpp', you can regenerate it but should not edit.
/// This file is committed to the repository, because not every build system supports to generate it on the fly.

#include <Functions/FunctionFactory.h>

namespace DB
{
void registerFunctionAbs(FunctionFactory &);
void registerFunctionAcos(FunctionFactory &);
void registerFunctionAddDays(FunctionFactory &);
void registerFunctionAddHours(FunctionFactory &);
void registerFunctionAddMinutes(FunctionFactory &);
void registerFunctionAddMonths(FunctionFactory &);
void registerFunctionAddQuarters(FunctionFactory &);
void registerFunctionAddressToLine(FunctionFactory &);
void registerFunctionAddressToSymbol(FunctionFactory &);
void registerFunctionAddSeconds(FunctionFactory &);
void registerFunctionAddWeeks(FunctionFactory &);
void registerFunctionAddYears(FunctionFactory &);
void registerFunctionAppendTrailingCharIfAbsent(FunctionFactory &);
void registerFunctionArray(FunctionFactory &);
void registerFunctionArrayAll(FunctionFactory &);
void registerFunctionArrayAUC(FunctionFactory &);
void registerFunctionArrayCompact(FunctionFactory &);
void registerFunctionArrayConcat(FunctionFactory &);
void registerFunctionArrayCount(FunctionFactory &);
void registerFunctionArrayCumSum(FunctionFactory &);
void registerFunctionArrayCumSumNonNegative(FunctionFactory &);
void registerFunctionArrayDifference(FunctionFactory &);
void registerFunctionArrayDistinct(FunctionFactory &);
void registerFunctionArrayElement(FunctionFactory &);
void registerFunctionArrayEnumerate(FunctionFactory &);
void registerFunctionArrayEnumerateDense(FunctionFactory &);
void registerFunctionArrayEnumerateDenseRanked(FunctionFactory &);
void registerFunctionArrayEnumerateUniq(FunctionFactory &);
void registerFunctionArrayEnumerateUniqRanked(FunctionFactory &);
void registerFunctionArrayExists(FunctionFactory &);
void registerFunctionArrayFilter(FunctionFactory &);
void registerFunctionArrayFirst(FunctionFactory &);
void registerFunctionArrayFirstIndex(FunctionFactory &);
void registerFunctionArrayFlatten(FunctionFactory &);
void registerFunctionArrayIntersect(FunctionFactory &);
void registerFunctionArrayJoin(FunctionFactory &);
void registerFunctionArrayMap(FunctionFactory &);
void registerFunctionArrayPopBack(FunctionFactory &);
void registerFunctionArrayPopFront(FunctionFactory &);
void registerFunctionArrayPushBack(FunctionFactory &);
void registerFunctionArrayPushFront(FunctionFactory &);
void registerFunctionArrayReduce(FunctionFactory &);
void registerFunctionArrayReduceInRanges(FunctionFactory &);
void registerFunctionArrayResize(FunctionFactory &);
void registerFunctionArrayReverse(FunctionFactory &);
void registerFunctionArraySlice(FunctionFactory &);
void registerFunctionArraySum(FunctionFactory &);
void registerFunctionArrayUniq(FunctionFactory &);
void registerFunctionArrayWithConstant(FunctionFactory &);
void registerFunctionArrayZip(FunctionFactory &);
void registerFunctionAsin(FunctionFactory &);
void registerFunctionAssumeNotNull(FunctionFactory &);
void registerFunctionAtan(FunctionFactory &);
void registerFunctionBar(FunctionFactory &);
void registerFunctionBase64Decode(FunctionFactory &);
void registerFunctionBase64Encode(FunctionFactory &);
void registerFunctionBasename(FunctionFactory &);
void registerFunctionBayesAB(FunctionFactory &);
void registerFunctionBitAnd(FunctionFactory &);
void registerFunctionBitBoolMaskAnd(FunctionFactory &);
void registerFunctionBitBoolMaskOr(FunctionFactory &);
void registerFunctionBitCount(FunctionFactory &);
void registerFunctionBitNot(FunctionFactory &);
void registerFunctionBitOr(FunctionFactory &);
void registerFunctionBitRotateLeft(FunctionFactory &);
void registerFunctionBitRotateRight(FunctionFactory &);
void registerFunctionBitShiftLeft(FunctionFactory &);
void registerFunctionBitShiftRight(FunctionFactory &);
void registerFunctionBitSwapLastTwo(FunctionFactory &);
void registerFunctionBitTest(FunctionFactory &);
void registerFunctionBitTestAll(FunctionFactory &);
void registerFunctionBitTestAny(FunctionFactory &);
void registerFunctionBitWrapperFunc(FunctionFactory &);
void registerFunctionBitXor(FunctionFactory &);
void registerFunctionBlockNumber(FunctionFactory &);
void registerFunctionBlockSerializedSize(FunctionFactory &);
void registerFunctionBlockSize(FunctionFactory &);
void registerFunctionBuildId(FunctionFactory &);
void registerFunctionCaseWithExpression(FunctionFactory &);
void registerFunctionCbrt(FunctionFactory &);
void registerFunctionCoalesce(FunctionFactory &);
void registerFunctionConvertCharset(FunctionFactory &);
void registerFunctionCos(FunctionFactory &);
void registerFunctionCountDigits(FunctionFactory &);
void registerFunctionCountEqual(FunctionFactory &);
void registerFunctionCRC(FunctionFactory &);
void registerFunctionCurrentDatabase(FunctionFactory &);
void registerFunctionCurrentUser(FunctionFactory &);
void registerFunctionCutFragment(FunctionFactory &);
void registerFunctionCutQueryString(FunctionFactory &);
void registerFunctionCutQueryStringAndFragment(FunctionFactory &);
void registerFunctionCutToFirstSignificantSubdomain(FunctionFactory &);
void registerFunctionCutURLParameter(FunctionFactory &);
void registerFunctionCutWWW(FunctionFactory &);
void registerFunctionDateDiff(FunctionFactory &);
void registerFunctionDateTrunc(FunctionFactory &);
void registerFunctionDecodeURLComponent(FunctionFactory &);
void registerFunctionDefaultValueOfArgumentType(FunctionFactory &);
void registerFunctionDefaultValueOfTypeName(FunctionFactory &);
void registerFunctionDemangle(FunctionFactory &);
void registerFunctionDivide(FunctionFactory &);
void registerFunctionDomain(FunctionFactory &);
void registerFunctionDomainWithoutWWW(FunctionFactory &);
void registerFunctionDumpColumnStructure(FunctionFactory &);
void registerFunctionE(FunctionFactory &);
void registerFunctionEmpty(FunctionFactory &);
void registerFunctionEmptyArrayToSingle(FunctionFactory &);
void registerFunctionEndsWith(FunctionFactory &);
void registerFunctionEquals(FunctionFactory &);
void registerFunctionErf(FunctionFactory &);
void registerFunctionErfc(FunctionFactory &);
void registerFunctionEvalMLMethod(FunctionFactory &);
void registerFunctionExp(FunctionFactory &);
void registerFunctionExp10(FunctionFactory &);
void registerFunctionExp2(FunctionFactory &);
void registerFunctionExtract(FunctionFactory &);
void registerFunctionExtractAllGroupsHorizontal(FunctionFactory &);
void registerFunctionExtractAllGroupsVertical(FunctionFactory &);
void registerFunctionExtractGroups(FunctionFactory &);
void registerFunctionExtractURLParameter(FunctionFactory &);
void registerFunctionExtractURLParameterNames(FunctionFactory &);
void registerFunctionExtractURLParameters(FunctionFactory &);
void registerFunctionFilesystem(FunctionFactory &);
void registerFunctionFinalizeAggregation(FunctionFactory &);
void registerFunctionFirstSignificantSubdomain(FunctionFactory &);
void registerFunctionFixedString(FunctionFactory &);
void registerFunctionFormat(FunctionFactory &);
void registerFunctionFormatDateTime(FunctionFactory &);
void registerFunctionFormatRow(FunctionFactory &);
void registerFunctionFQDN(FunctionFactory &);
void registerFunctionFragment(FunctionFactory &);
void registerFunctionFuzzBits(FunctionFactory &);
void registerFunctionGCD(FunctionFactory &);
void registerFunctionGenerateUUIDv4(FunctionFactory &);
void registerFunctionGeoDistance(FunctionFactory &);
void registerFunctionGeohashDecode(FunctionFactory &);
void registerFunctionGeohashEncode(FunctionFactory &);
void registerFunctionGeohashesInBox(FunctionFactory &);
void registerFunctionGeoToH3(FunctionFactory &);
void registerFunctionGetMacro(FunctionFactory &);
void registerFunctionGetScalar(FunctionFactory &);
void registerFunctionGetSetting(FunctionFactory &);
void registerFunctionGetSizeOfEnumType(FunctionFactory &);
void registerFunctionGlobalVariable(FunctionFactory &);
void registerFunctionGreater(FunctionFactory &);
void registerFunctionGreaterOrEquals(FunctionFactory &);
void registerFunctionGreatest(FunctionFactory &);
void registerFunctionH3EdgeAngle(FunctionFactory &);
void registerFunctionH3EdgeLengthM(FunctionFactory &);
void registerFunctionH3GetBaseCell(FunctionFactory &);
void registerFunctionH3GetResolution(FunctionFactory &);
void registerFunctionH3HexAreaM2(FunctionFactory &);
void registerFunctionH3IndexesAreNeighbors(FunctionFactory &);
void registerFunctionH3IsValid(FunctionFactory &);
void registerFunctionH3KRing(FunctionFactory &);
void registerFunctionH3ToChildren(FunctionFactory &);
void registerFunctionH3ToParent(FunctionFactory &);
void registerFunctionH3ToString(FunctionFactory &);
void registerFunctionHas(FunctionFactory &);
void registerFunctionHasAll(FunctionFactory &);
void registerFunctionHasAny(FunctionFactory &);
void registerFunctionHasColumnInTable(FunctionFactory &);
void registerFunctionHasSubstr(FunctionFactory &);
void registerFunctionHasThreadFuzzer(FunctionFactory &);
void registerFunctionHasToken(FunctionFactory &);
void registerFunctionHasTokenCaseInsensitive(FunctionFactory &);
void registerFunctionHostName(FunctionFactory &);
void registerFunctionIdentity(FunctionFactory &);
void registerFunctionIf(FunctionFactory &);
void registerFunctionIfNotFinite(FunctionFactory &);
void registerFunctionIfNull(FunctionFactory &);
void registerFunctionIgnore(FunctionFactory &);
void registerFunctionILike(FunctionFactory &);
void registerFunctionIndexOf(FunctionFactory &);
void registerFunctionInitializeAggregation(FunctionFactory &);
void registerFunctionIntDiv(FunctionFactory &);
void registerFunctionIntDivOrZero(FunctionFactory &);
void registerFunctionIntExp10(FunctionFactory &);
void registerFunctionIntExp2(FunctionFactory &);
void registerFunctionIsConstant(FunctionFactory &);
void registerFunctionIsDecimalOverflow(FunctionFactory &);
void registerFunctionIsFinite(FunctionFactory &);
void registerFunctionIsInfinite(FunctionFactory &);
void registerFunctionIsNaN(FunctionFactory &);
void registerFunctionIsNotNull(FunctionFactory &);
void registerFunctionIsNull(FunctionFactory &);
void registerFunctionIsValidUTF8(FunctionFactory &);
void registerFunctionIsZeroOrNull(FunctionFactory &);
void registerFunctionJoinGet(FunctionFactory &);
void registerFunctionJumpConsistentHash(FunctionFactory &);
void registerFunctionLCM(FunctionFactory &);
void registerFunctionLeast(FunctionFactory &);
void registerFunctionLength(FunctionFactory &);
void registerFunctionLengthUTF8(FunctionFactory &);
void registerFunctionLess(FunctionFactory &);
void registerFunctionLessOrEquals(FunctionFactory &);
void registerFunctionLGamma(FunctionFactory &);
void registerFunctionLike(FunctionFactory &);
void registerFunctionLog(FunctionFactory &);
void registerFunctionLog10(FunctionFactory &);
void registerFunctionLog2(FunctionFactory &);
void registerFunctionLogTrace(FunctionFactory &);
void registerFunctionLowCardinalityIndices(FunctionFactory &);
void registerFunctionLowCardinalityKeys(FunctionFactory &);
void registerFunctionLower(FunctionFactory &);
void registerFunctionLowerUTF8(FunctionFactory &);
void registerFunctionMapOp(FunctionFactory &);
void registerFunctionMapPopulateSeries(FunctionFactory &);
void registerFunctionMatch(FunctionFactory &);
void registerFunctionMaterialize(FunctionFactory &);
void registerFunctionMinus(FunctionFactory &);
void registerFunctionModulo(FunctionFactory &);
void registerFunctionModuloOrZero(FunctionFactory &);
void registerFunctionMultiFuzzyMatchAllIndices(FunctionFactory &);
void registerFunctionMultiFuzzyMatchAny(FunctionFactory &);
void registerFunctionMultiFuzzyMatchAnyIndex(FunctionFactory &);
void registerFunctionMultiIf(FunctionFactory &);
void registerFunctionMultiMatchAllIndices(FunctionFactory &);
void registerFunctionMultiMatchAny(FunctionFactory &);
void registerFunctionMultiMatchAnyIndex(FunctionFactory &);
void registerFunctionMultiply(FunctionFactory &);
void registerFunctionMultiSearchAllPositions(FunctionFactory &);
void registerFunctionMultiSearchAllPositionsCaseInsensitive(FunctionFactory &);
void registerFunctionMultiSearchAllPositionsCaseInsensitiveUTF8(FunctionFactory &);
void registerFunctionMultiSearchAllPositionsUTF8(FunctionFactory &);
void registerFunctionMultiSearchAny(FunctionFactory &);
void registerFunctionMultiSearchAnyCaseInsensitive(FunctionFactory &);
void registerFunctionMultiSearchAnyCaseInsensitiveUTF8(FunctionFactory &);
void registerFunctionMultiSearchAnyUTF8(FunctionFactory &);
void registerFunctionMultiSearchFirstIndex(FunctionFactory &);
void registerFunctionMultiSearchFirstIndexCaseInsensitive(FunctionFactory &);
void registerFunctionMultiSearchFirstIndexCaseInsensitiveUTF8(FunctionFactory &);
void registerFunctionMultiSearchFirstIndexUTF8(FunctionFactory &);
void registerFunctionMultiSearchFirstPosition(FunctionFactory &);
void registerFunctionMultiSearchFirstPositionCaseInsensitive(FunctionFactory &);
void registerFunctionMultiSearchFirstPositionCaseInsensitiveUTF8(FunctionFactory &);
void registerFunctionMultiSearchFirstPositionUTF8(FunctionFactory &);
void registerFunctionNegate(FunctionFactory &);
void registerFunctionNeighbor(FunctionFactory &);
void registerFunctionNetloc(FunctionFactory &);
void registerFunctionNormalizedQueryHash(FunctionFactory &);
void registerFunctionNormalizeQuery(FunctionFactory &);
void registerFunctionNotEmpty(FunctionFactory &);
void registerFunctionNotEquals(FunctionFactory &);
void registerFunctionNotILike(FunctionFactory &);
void registerFunctionNotLike(FunctionFactory &);
void registerFunctionNow(FunctionFactory &);
void registerFunctionNow64(FunctionFactory &);
void registerFunctionNullIf(FunctionFactory &);
void registerFunctionPath(FunctionFactory &);
void registerFunctionPathFull(FunctionFactory &);
void registerFunctionPi(FunctionFactory &);
void registerFunctionPlus(FunctionFactory &);
void registerFunctionPointInEllipses(FunctionFactory &);
void registerFunctionPointInPolygon(FunctionFactory &);
void registerFunctionPort(FunctionFactory &);
void registerFunctionPosition(FunctionFactory &);
void registerFunctionPositionCaseInsensitive(FunctionFactory &);
void registerFunctionPositionCaseInsensitiveUTF8(FunctionFactory &);
void registerFunctionPositionUTF8(FunctionFactory &);
void registerFunctionPow(FunctionFactory &);
void registerFunctionProtocol(FunctionFactory &);
void registerFunctionQueryString(FunctionFactory &);
void registerFunctionQueryStringAndFragment(FunctionFactory &);
void registerFunctionRand(FunctionFactory &);
void registerFunctionRand64(FunctionFactory &);
void registerFunctionRandConstant(FunctionFactory &);
void registerFunctionRandomFixedString(FunctionFactory &);
void registerFunctionRandomPrintableASCII(FunctionFactory &);
void registerFunctionRandomString(FunctionFactory &);
void registerFunctionRandomStringUTF8(FunctionFactory &);
void registerFunctionRange(FunctionFactory &);
void registerFunctionRegexpQuoteMeta(FunctionFactory &);
void registerFunctionReinterpretAsFixedString(FunctionFactory &);
void registerFunctionReinterpretAsString(FunctionFactory &);
void registerFunctionRepeat(FunctionFactory &);
void registerFunctionReplaceAll(FunctionFactory &);
void registerFunctionReplaceOne(FunctionFactory &);
void registerFunctionReplaceRegexpAll(FunctionFactory &);
void registerFunctionReplaceRegexpOne(FunctionFactory &);
void registerFunctionReplicate(FunctionFactory &);
void registerFunctionReverse(FunctionFactory &);
void registerFunctionReverseUTF8(FunctionFactory &);
void registerFunctionRoundAge(FunctionFactory &);
void registerFunctionRoundDuration(FunctionFactory &);
void registerFunctionRoundToExp2(FunctionFactory &);
void registerFunctionRowNumberInAllBlocks(FunctionFactory &);
void registerFunctionRowNumberInBlock(FunctionFactory &);
void registerFunctionRunningAccumulate(FunctionFactory &);
void registerFunctionRunningDifference(FunctionFactory &);
void registerFunctionRunningDifferenceStartingWithFirstValue(FunctionFactory &);
void registerFunctionsArrayFill(FunctionFactory &);
void registerFunctionsArraySort(FunctionFactory &);
void registerFunctionsArraySplit(FunctionFactory &);
void registerFunctionsBitmap(FunctionFactory &);
void registerFunctionsCoding(FunctionFactory &);
void registerFunctionsConcat(FunctionFactory &);
void registerFunctionsConversion(FunctionFactory &);
void registerFunctionsEmbeddedDictionaries(FunctionFactory &);
void registerFunctionsEmptyArray(FunctionFactory &);
void registerFunctionsExternalDictionaries(FunctionFactory &);
void registerFunctionsExternalModels(FunctionFactory &);
void registerFunctionsFormatting(FunctionFactory &);
void registerFunctionsHashing(FunctionFactory &);
void registerFunctionSigmoid(FunctionFactory &);
void registerFunctionsIn(FunctionFactory &);
void registerFunctionSin(FunctionFactory &);
void registerFunctionsJSON(FunctionFactory &);
void registerFunctionSleep(FunctionFactory &);
void registerFunctionSleepEachRow(FunctionFactory &);
void registerFunctionsLogical(FunctionFactory &);
void registerFunctionSqrt(FunctionFactory &);
void registerFunctionsReinterpretStringAs(FunctionFactory &);
void registerFunctionsRound(FunctionFactory &);
void registerFunctionsStringArray(FunctionFactory &);
void registerFunctionsStringSimilarity(FunctionFactory &);
void registerFunctionStartsWith(FunctionFactory &);
void registerFunctionStringToH3(FunctionFactory &);
void registerFunctionSubstring(FunctionFactory &);
void registerFunctionSubtractDays(FunctionFactory &);
void registerFunctionSubtractHours(FunctionFactory &);
void registerFunctionSubtractMinutes(FunctionFactory &);
void registerFunctionSubtractMonths(FunctionFactory &);
void registerFunctionSubtractQuarters(FunctionFactory &);
void registerFunctionSubtractSeconds(FunctionFactory &);
void registerFunctionSubtractWeeks(FunctionFactory &);
void registerFunctionSubtractYears(FunctionFactory &);
void registerFunctionSumburConsistentHash(FunctionFactory &);
void registerFunctionTan(FunctionFactory &);
void registerFunctionTanh(FunctionFactory &);
void registerFunctionTGamma(FunctionFactory &);
void registerFunctionThrowIf(FunctionFactory &);
void registerFunctionTid(FunctionFactory &);
void registerFunctionTimeSlot(FunctionFactory &);
void registerFunctionTimeSlots(FunctionFactory &);
void registerFunctionTimeZone(FunctionFactory &);
void registerFunctionToColumnTypeName(FunctionFactory &);
void registerFunctionToCustomWeek(FunctionFactory &);
void registerFunctionToday(FunctionFactory &);
void registerFunctionToDayOfMonth(FunctionFactory &);
void registerFunctionToDayOfWeek(FunctionFactory &);
void registerFunctionToDayOfYear(FunctionFactory &);
void registerFunctionToHour(FunctionFactory &);
void registerFunctionToISOWeek(FunctionFactory &);
void registerFunctionToISOYear(FunctionFactory &);
void registerFunctionToLowCardinality(FunctionFactory &);
void registerFunctionToMinute(FunctionFactory &);
void registerFunctionToMonday(FunctionFactory &);
void registerFunctionToMonth(FunctionFactory &);
void registerFunctionToNullable(FunctionFactory &);
void registerFunctionTopLevelDomain(FunctionFactory &);
void registerFunctionToQuarter(FunctionFactory &);
void registerFunctionToRelativeDayNum(FunctionFactory &);
void registerFunctionToRelativeHourNum(FunctionFactory &);
void registerFunctionToRelativeMinuteNum(FunctionFactory &);
void registerFunctionToRelativeMonthNum(FunctionFactory &);
void registerFunctionToRelativeQuarterNum(FunctionFactory &);
void registerFunctionToRelativeSecondNum(FunctionFactory &);
void registerFunctionToRelativeWeekNum(FunctionFactory &);
void registerFunctionToRelativeYearNum(FunctionFactory &);
void registerFunctionToSecond(FunctionFactory &);
void registerFunctionToStartOfDay(FunctionFactory &);
void registerFunctionToStartOfFifteenMinutes(FunctionFactory &);
void registerFunctionToStartOfFiveMinute(FunctionFactory &);
void registerFunctionToStartOfHour(FunctionFactory &);
void registerFunctionToStartOfInterval(FunctionFactory &);
void registerFunctionToStartOfISOYear(FunctionFactory &);
void registerFunctionToStartOfMinute(FunctionFactory &);
void registerFunctionToStartOfMonth(FunctionFactory &);
void registerFunctionToStartOfQuarter(FunctionFactory &);
void registerFunctionToStartOfSecond(FunctionFactory &);
void registerFunctionToStartOfTenMinutes(FunctionFactory &);
void registerFunctionToStartOfYear(FunctionFactory &);
void registerFunctionToTime(FunctionFactory &);
void registerFunctionToTimeZone(FunctionFactory &);
void registerFunctionToTypeName(FunctionFactory &);
void registerFunctionToValidUTF8(FunctionFactory &);
void registerFunctionToYear(FunctionFactory &);
void registerFunctionToYYYYMM(FunctionFactory &);
void registerFunctionToYYYYMMDD(FunctionFactory &);
void registerFunctionToYYYYMMDDhhmmss(FunctionFactory &);
void registerFunctionTransform(FunctionFactory &);
void registerFunctionTrap(FunctionFactory &);
void registerFunctionTrim(FunctionFactory &);
void registerFunctionTryBase64Decode(FunctionFactory &);
void registerFunctionTuple(FunctionFactory &);
void registerFunctionTupleElement(FunctionFactory &);
void registerFunctionUpper(FunctionFactory &);
void registerFunctionUpperUTF8(FunctionFactory &);
void registerFunctionUptime(FunctionFactory &);
void registerFunctionURLHierarchy(FunctionFactory &);
void registerFunctionURLPathHierarchy(FunctionFactory &);
void registerFunctionVersion(FunctionFactory &);
void registerFunctionVisibleWidth(FunctionFactory &);
void registerFunctionVisitParamExtractBool(FunctionFactory &);
void registerFunctionVisitParamExtractFloat(FunctionFactory &);
void registerFunctionVisitParamExtractInt(FunctionFactory &);
void registerFunctionVisitParamExtractRaw(FunctionFactory &);
void registerFunctionVisitParamExtractString(FunctionFactory &);
void registerFunctionVisitParamExtractUInt(FunctionFactory &);
void registerFunctionVisitParamHas(FunctionFactory &);
void registerFunctionYandexConsistentHash(FunctionFactory &);
void registerFunctionYesterday(FunctionFactory &);

void registerFunctions()
{
    auto & factory = FunctionFactory::instance();

    registerFunctionAbs(factory);
    registerFunctionAcos(factory);
    registerFunctionAddDays(factory);
    registerFunctionAddHours(factory);
    registerFunctionAddMinutes(factory);
    registerFunctionAddMonths(factory);
    registerFunctionAddQuarters(factory);
    registerFunctionAddressToLine(factory);
    registerFunctionAddressToSymbol(factory);
    registerFunctionAddSeconds(factory);
    registerFunctionAddWeeks(factory);
    registerFunctionAddYears(factory);
    registerFunctionAppendTrailingCharIfAbsent(factory);
    registerFunctionArray(factory);
    registerFunctionArrayAll(factory);
    registerFunctionArrayAUC(factory);
    registerFunctionArrayCompact(factory);
    registerFunctionArrayConcat(factory);
    registerFunctionArrayCount(factory);
    registerFunctionArrayCumSum(factory);
    registerFunctionArrayCumSumNonNegative(factory);
    registerFunctionArrayDifference(factory);
    registerFunctionArrayDistinct(factory);
    registerFunctionArrayElement(factory);
    registerFunctionArrayEnumerate(factory);
    registerFunctionArrayEnumerateDense(factory);
    registerFunctionArrayEnumerateDenseRanked(factory);
    registerFunctionArrayEnumerateUniq(factory);
    registerFunctionArrayEnumerateUniqRanked(factory);
    registerFunctionArrayExists(factory);
    registerFunctionArrayFilter(factory);
    registerFunctionArrayFirst(factory);
    registerFunctionArrayFirstIndex(factory);
    registerFunctionArrayFlatten(factory);
    registerFunctionArrayIntersect(factory);
    registerFunctionArrayJoin(factory);
    registerFunctionArrayMap(factory);
    registerFunctionArrayPopBack(factory);
    registerFunctionArrayPopFront(factory);
    registerFunctionArrayPushBack(factory);
    registerFunctionArrayPushFront(factory);
    registerFunctionArrayReduce(factory);
    registerFunctionArrayReduceInRanges(factory);
    registerFunctionArrayResize(factory);
    registerFunctionArrayReverse(factory);
    registerFunctionArraySlice(factory);
    registerFunctionArraySum(factory);
    registerFunctionArrayUniq(factory);
    registerFunctionArrayWithConstant(factory);
    registerFunctionArrayZip(factory);
    registerFunctionAsin(factory);
    registerFunctionAssumeNotNull(factory);
    registerFunctionAtan(factory);
    registerFunctionBar(factory);
    registerFunctionBase64Decode(factory);
    registerFunctionBase64Encode(factory);
    registerFunctionBasename(factory);
    registerFunctionBayesAB(factory);
    registerFunctionBitAnd(factory);
    registerFunctionBitBoolMaskAnd(factory);
    registerFunctionBitBoolMaskOr(factory);
    registerFunctionBitCount(factory);
    registerFunctionBitNot(factory);
    registerFunctionBitOr(factory);
    registerFunctionBitRotateLeft(factory);
    registerFunctionBitRotateRight(factory);
    registerFunctionBitShiftLeft(factory);
    registerFunctionBitShiftRight(factory);
    registerFunctionBitSwapLastTwo(factory);
    registerFunctionBitTest(factory);
    registerFunctionBitTestAll(factory);
    registerFunctionBitTestAny(factory);
    registerFunctionBitWrapperFunc(factory);
    registerFunctionBitXor(factory);
    registerFunctionBlockNumber(factory);
    registerFunctionBlockSerializedSize(factory);
    registerFunctionBlockSize(factory);
    registerFunctionBuildId(factory);
    registerFunctionCaseWithExpression(factory);
    registerFunctionCbrt(factory);
    registerFunctionCoalesce(factory);
    registerFunctionConvertCharset(factory);
    registerFunctionCos(factory);
    registerFunctionCountDigits(factory);
    registerFunctionCountEqual(factory);
    registerFunctionCRC(factory);
    registerFunctionCurrentDatabase(factory);
    registerFunctionCurrentUser(factory);
    registerFunctionCutFragment(factory);
    registerFunctionCutQueryString(factory);
    registerFunctionCutQueryStringAndFragment(factory);
    registerFunctionCutToFirstSignificantSubdomain(factory);
    registerFunctionCutURLParameter(factory);
    registerFunctionCutWWW(factory);
    registerFunctionDateDiff(factory);
    registerFunctionDateTrunc(factory);
    registerFunctionDecodeURLComponent(factory);
    registerFunctionDefaultValueOfArgumentType(factory);
    registerFunctionDefaultValueOfTypeName(factory);
    registerFunctionDemangle(factory);
    registerFunctionDivide(factory);
    registerFunctionDomain(factory);
    registerFunctionDomainWithoutWWW(factory);
    registerFunctionDumpColumnStructure(factory);
    registerFunctionE(factory);
    registerFunctionEmpty(factory);
    registerFunctionEmptyArrayToSingle(factory);
    registerFunctionEndsWith(factory);
    registerFunctionEquals(factory);
    registerFunctionErf(factory);
    registerFunctionErfc(factory);
    registerFunctionEvalMLMethod(factory);
    registerFunctionExp(factory);
    registerFunctionExp10(factory);
    registerFunctionExp2(factory);
    registerFunctionExtract(factory);
    registerFunctionExtractAllGroupsHorizontal(factory);
    registerFunctionExtractAllGroupsVertical(factory);
    registerFunctionExtractGroups(factory);
    registerFunctionExtractURLParameter(factory);
    registerFunctionExtractURLParameterNames(factory);
    registerFunctionExtractURLParameters(factory);
    registerFunctionFilesystem(factory);
    registerFunctionFinalizeAggregation(factory);
    registerFunctionFirstSignificantSubdomain(factory);
    registerFunctionFixedString(factory);
    registerFunctionFormat(factory);
    registerFunctionFormatDateTime(factory);
    registerFunctionFormatRow(factory);
    registerFunctionFQDN(factory);
    registerFunctionFragment(factory);
    registerFunctionFuzzBits(factory);
    registerFunctionGCD(factory);
    registerFunctionGenerateUUIDv4(factory);
    registerFunctionGeoDistance(factory);
    registerFunctionGeohashDecode(factory);
    registerFunctionGeohashEncode(factory);
    registerFunctionGeohashesInBox(factory);
    registerFunctionGeoToH3(factory);
    registerFunctionGetMacro(factory);
    registerFunctionGetScalar(factory);
    registerFunctionGetSetting(factory);
    registerFunctionGetSizeOfEnumType(factory);
    registerFunctionGlobalVariable(factory);
    registerFunctionGreater(factory);
    registerFunctionGreaterOrEquals(factory);
    registerFunctionGreatest(factory);
    registerFunctionH3EdgeAngle(factory);
    registerFunctionH3EdgeLengthM(factory);
    registerFunctionH3GetBaseCell(factory);
    registerFunctionH3GetResolution(factory);
    registerFunctionH3HexAreaM2(factory);
    registerFunctionH3IndexesAreNeighbors(factory);
    registerFunctionH3IsValid(factory);
    registerFunctionH3KRing(factory);
    registerFunctionH3ToChildren(factory);
    registerFunctionH3ToParent(factory);
    registerFunctionH3ToString(factory);
    registerFunctionHas(factory);
    registerFunctionHasAll(factory);
    registerFunctionHasAny(factory);
    registerFunctionHasColumnInTable(factory);
    registerFunctionHasSubstr(factory);
    registerFunctionHasThreadFuzzer(factory);
    registerFunctionHasToken(factory);
    registerFunctionHasTokenCaseInsensitive(factory);
    registerFunctionHostName(factory);
    registerFunctionIdentity(factory);
    registerFunctionIf(factory);
    registerFunctionIfNotFinite(factory);
    registerFunctionIfNull(factory);
    registerFunctionIgnore(factory);
    registerFunctionILike(factory);
    registerFunctionIndexOf(factory);
    registerFunctionInitializeAggregation(factory);
    registerFunctionIntDiv(factory);
    registerFunctionIntDivOrZero(factory);
    registerFunctionIntExp10(factory);
    registerFunctionIntExp2(factory);
    registerFunctionIsConstant(factory);
    registerFunctionIsDecimalOverflow(factory);
    registerFunctionIsFinite(factory);
    registerFunctionIsInfinite(factory);
    registerFunctionIsNaN(factory);
    registerFunctionIsNotNull(factory);
    registerFunctionIsNull(factory);
    registerFunctionIsValidUTF8(factory);
    registerFunctionIsZeroOrNull(factory);
    registerFunctionJoinGet(factory);
    registerFunctionJumpConsistentHash(factory);
    registerFunctionLCM(factory);
    registerFunctionLeast(factory);
    registerFunctionLength(factory);
    registerFunctionLengthUTF8(factory);
    registerFunctionLess(factory);
    registerFunctionLessOrEquals(factory);
    registerFunctionLGamma(factory);
    registerFunctionLike(factory);
    registerFunctionLog(factory);
    registerFunctionLog10(factory);
    registerFunctionLog2(factory);
    registerFunctionLogTrace(factory);
    registerFunctionLowCardinalityIndices(factory);
    registerFunctionLowCardinalityKeys(factory);
    registerFunctionLower(factory);
    registerFunctionLowerUTF8(factory);
    registerFunctionMapOp(factory);
    registerFunctionMapPopulateSeries(factory);
    registerFunctionMatch(factory);
    registerFunctionMaterialize(factory);
    registerFunctionMinus(factory);
    registerFunctionModulo(factory);
    registerFunctionModuloOrZero(factory);
    registerFunctionMultiFuzzyMatchAllIndices(factory);
    registerFunctionMultiFuzzyMatchAny(factory);
    registerFunctionMultiFuzzyMatchAnyIndex(factory);
    registerFunctionMultiIf(factory);
    registerFunctionMultiMatchAllIndices(factory);
    registerFunctionMultiMatchAny(factory);
    registerFunctionMultiMatchAnyIndex(factory);
    registerFunctionMultiply(factory);
    registerFunctionMultiSearchAllPositions(factory);
    registerFunctionMultiSearchAllPositionsCaseInsensitive(factory);
    registerFunctionMultiSearchAllPositionsCaseInsensitiveUTF8(factory);
    registerFunctionMultiSearchAllPositionsUTF8(factory);
    registerFunctionMultiSearchAny(factory);
    registerFunctionMultiSearchAnyCaseInsensitive(factory);
    registerFunctionMultiSearchAnyCaseInsensitiveUTF8(factory);
    registerFunctionMultiSearchAnyUTF8(factory);
    registerFunctionMultiSearchFirstIndex(factory);
    registerFunctionMultiSearchFirstIndexCaseInsensitive(factory);
    registerFunctionMultiSearchFirstIndexCaseInsensitiveUTF8(factory);
    registerFunctionMultiSearchFirstIndexUTF8(factory);
    registerFunctionMultiSearchFirstPosition(factory);
    registerFunctionMultiSearchFirstPositionCaseInsensitive(factory);
    registerFunctionMultiSearchFirstPositionCaseInsensitiveUTF8(factory);
    registerFunctionMultiSearchFirstPositionUTF8(factory);
    registerFunctionNegate(factory);
    registerFunctionNeighbor(factory);
    registerFunctionNetloc(factory);
    registerFunctionNormalizedQueryHash(factory);
    registerFunctionNormalizeQuery(factory);
    registerFunctionNotEmpty(factory);
    registerFunctionNotEquals(factory);
    registerFunctionNotILike(factory);
    registerFunctionNotLike(factory);
    registerFunctionNow(factory);
    registerFunctionNow64(factory);
    registerFunctionNullIf(factory);
    registerFunctionPath(factory);
    registerFunctionPathFull(factory);
    registerFunctionPi(factory);
    registerFunctionPlus(factory);
    registerFunctionPointInEllipses(factory);
    registerFunctionPointInPolygon(factory);
    registerFunctionPort(factory);
    registerFunctionPosition(factory);
    registerFunctionPositionCaseInsensitive(factory);
    registerFunctionPositionCaseInsensitiveUTF8(factory);
    registerFunctionPositionUTF8(factory);
    registerFunctionPow(factory);
    registerFunctionProtocol(factory);
    registerFunctionQueryString(factory);
    registerFunctionQueryStringAndFragment(factory);
    registerFunctionRand(factory);
    registerFunctionRand64(factory);
    registerFunctionRandConstant(factory);
    registerFunctionRandomFixedString(factory);
    registerFunctionRandomPrintableASCII(factory);
    registerFunctionRandomString(factory);
    registerFunctionRandomStringUTF8(factory);
    registerFunctionRange(factory);
    registerFunctionRegexpQuoteMeta(factory);
    registerFunctionReinterpretAsFixedString(factory);
    registerFunctionReinterpretAsString(factory);
    registerFunctionRepeat(factory);
    registerFunctionReplaceAll(factory);
    registerFunctionReplaceOne(factory);
    registerFunctionReplaceRegexpAll(factory);
    registerFunctionReplaceRegexpOne(factory);
    registerFunctionReplicate(factory);
    registerFunctionReverse(factory);
    registerFunctionReverseUTF8(factory);
    registerFunctionRoundAge(factory);
    registerFunctionRoundDuration(factory);
    registerFunctionRoundToExp2(factory);
    registerFunctionRowNumberInAllBlocks(factory);
    registerFunctionRowNumberInBlock(factory);
    registerFunctionRunningAccumulate(factory);
    registerFunctionRunningDifference(factory);
    registerFunctionRunningDifferenceStartingWithFirstValue(factory);
    registerFunctionsArrayFill(factory);
    registerFunctionsArraySort(factory);
    registerFunctionsArraySplit(factory);
    registerFunctionsBitmap(factory);
    registerFunctionsCoding(factory);
    registerFunctionsConcat(factory);
    registerFunctionsConversion(factory);
    registerFunctionsEmbeddedDictionaries(factory);
    registerFunctionsEmptyArray(factory);
    registerFunctionsExternalDictionaries(factory);
    registerFunctionsExternalModels(factory);
    registerFunctionsFormatting(factory);
    registerFunctionsHashing(factory);
    registerFunctionSigmoid(factory);
    registerFunctionsIn(factory);
    registerFunctionSin(factory);
    registerFunctionsJSON(factory);
    registerFunctionSleep(factory);
    registerFunctionSleepEachRow(factory);
    registerFunctionsLogical(factory);
    registerFunctionSqrt(factory);
    registerFunctionsReinterpretStringAs(factory);
    registerFunctionsRound(factory);
    registerFunctionsStringArray(factory);
    registerFunctionsStringSimilarity(factory);
    registerFunctionStartsWith(factory);
    registerFunctionStringToH3(factory);
    registerFunctionSubstring(factory);
    registerFunctionSubtractDays(factory);
    registerFunctionSubtractHours(factory);
    registerFunctionSubtractMinutes(factory);
    registerFunctionSubtractMonths(factory);
    registerFunctionSubtractQuarters(factory);
    registerFunctionSubtractSeconds(factory);
    registerFunctionSubtractWeeks(factory);
    registerFunctionSubtractYears(factory);
    registerFunctionSumburConsistentHash(factory);
    registerFunctionTan(factory);
    registerFunctionTanh(factory);
    registerFunctionTGamma(factory);
    registerFunctionThrowIf(factory);
    registerFunctionTid(factory);
    registerFunctionTimeSlot(factory);
    registerFunctionTimeSlots(factory);
    registerFunctionTimeZone(factory);
    registerFunctionToColumnTypeName(factory);
    registerFunctionToCustomWeek(factory);
    registerFunctionToday(factory);
    registerFunctionToDayOfMonth(factory);
    registerFunctionToDayOfWeek(factory);
    registerFunctionToDayOfYear(factory);
    registerFunctionToHour(factory);
    registerFunctionToISOWeek(factory);
    registerFunctionToISOYear(factory);
    registerFunctionToLowCardinality(factory);
    registerFunctionToMinute(factory);
    registerFunctionToMonday(factory);
    registerFunctionToMonth(factory);
    registerFunctionToNullable(factory);
    registerFunctionTopLevelDomain(factory);
    registerFunctionToQuarter(factory);
    registerFunctionToRelativeDayNum(factory);
    registerFunctionToRelativeHourNum(factory);
    registerFunctionToRelativeMinuteNum(factory);
    registerFunctionToRelativeMonthNum(factory);
    registerFunctionToRelativeQuarterNum(factory);
    registerFunctionToRelativeSecondNum(factory);
    registerFunctionToRelativeWeekNum(factory);
    registerFunctionToRelativeYearNum(factory);
    registerFunctionToSecond(factory);
    registerFunctionToStartOfDay(factory);
    registerFunctionToStartOfFifteenMinutes(factory);
    registerFunctionToStartOfFiveMinute(factory);
    registerFunctionToStartOfHour(factory);
    registerFunctionToStartOfInterval(factory);
    registerFunctionToStartOfISOYear(factory);
    registerFunctionToStartOfMinute(factory);
    registerFunctionToStartOfMonth(factory);
    registerFunctionToStartOfQuarter(factory);
    registerFunctionToStartOfSecond(factory);
    registerFunctionToStartOfTenMinutes(factory);
    registerFunctionToStartOfYear(factory);
    registerFunctionToTime(factory);
    registerFunctionToTimeZone(factory);
    registerFunctionToTypeName(factory);
    registerFunctionToValidUTF8(factory);
    registerFunctionToYear(factory);
    registerFunctionToYYYYMM(factory);
    registerFunctionToYYYYMMDD(factory);
    registerFunctionToYYYYMMDDhhmmss(factory);
    registerFunctionTransform(factory);
    registerFunctionTrap(factory);
    registerFunctionTrim(factory);
    registerFunctionTryBase64Decode(factory);
    registerFunctionTuple(factory);
    registerFunctionTupleElement(factory);
    registerFunctionUpper(factory);
    registerFunctionUpperUTF8(factory);
    registerFunctionUptime(factory);
    registerFunctionURLHierarchy(factory);
    registerFunctionURLPathHierarchy(factory);
    registerFunctionVersion(factory);
    registerFunctionVisibleWidth(factory);
    registerFunctionVisitParamExtractBool(factory);
    registerFunctionVisitParamExtractFloat(factory);
    registerFunctionVisitParamExtractInt(factory);
    registerFunctionVisitParamExtractRaw(factory);
    registerFunctionVisitParamExtractString(factory);
    registerFunctionVisitParamExtractUInt(factory);
    registerFunctionVisitParamHas(factory);
    registerFunctionYandexConsistentHash(factory);
    registerFunctionYesterday(factory);
}
}
